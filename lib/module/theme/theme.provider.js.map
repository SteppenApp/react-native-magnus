{"version":3,"names":["ThemeProvider","props","theme","themeProp","children","React","useState","deepmerge","defaultTheme","themeState","setThemeState","setTheme","newTheme","mergedTheme"],"sources":["theme.provider.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { ThemeType } from './type';\nimport { ThemeContext } from './theme.context';\nimport { defaultTheme } from '../style';\nimport deepmerge from 'deepmerge';\n\nexport interface ThemeProviderProps {\n  theme?: ThemeType;\n}\n\nexport const ThemeProvider: React.FunctionComponent<ThemeProviderProps> = (\n  props\n) => {\n  const { theme: themeProp = {}, children } = props;\n\n  const [themeState, setThemeState] = React.useState(\n    deepmerge(defaultTheme, themeProp)\n  );\n\n  const setTheme = (newTheme: ThemeType) => {\n    const mergedTheme = deepmerge(defaultTheme, newTheme);\n    setThemeState(mergedTheme);\n  };\n\n  return (\n    <ThemeContext.Provider value={{ theme: themeState, setTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n"],"mappings":"qQAAA,oDAGA,sCACA,+BACA,4D,umCAMO,GAAMA,cAA0D,CAAG,QAA7DA,cAA6D,CACxEC,KADwE,CAErE,CACH,iBAA4CA,KAA5C,CAAQC,KAAR,CAAeC,SAAf,uBAA2B,EAA3B,cAA+BC,QAA/B,CAA4CH,KAA5C,CAA+BG,QAA/B,CAEA,oBAAoCC,KAAK,CAACC,QAAN,CAClC,GAAAC,kBAAA,EAAUC,mBAAV,CAAwBL,SAAxB,CADkC,CAApC,iEAAOM,UAAP,qBAAmBC,aAAnB,qBAIA,GAAMC,SAAQ,CAAG,QAAXA,SAAW,CAACC,QAAD,CAAyB,CACxC,GAAMC,YAAW,CAAG,GAAAN,kBAAA,EAAUC,mBAAV,CAAwBI,QAAxB,CAApB,CACAF,aAAa,CAACG,WAAD,CAAb,CACD,CAHD,CAKA,MACE,qBAAC,mBAAD,CAAc,QAAd,EAAuB,KAAK,CAAE,CAAEX,KAAK,CAAEO,UAAT,CAAqBE,QAAQ,CAARA,QAArB,CAA9B,6EACGP,QADH,CADF,CAKD,CAnBM,C"}