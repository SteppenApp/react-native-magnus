{"version":3,"names":["getStyle","theme","props","computedStyle","div","flexDirection","row","flexDir","flexWrap","alignItems","justifyContent","height","h","width","w","minWidth","minW","minHeight","minH","alignSelf","maxWidth","maxW","maxHeight","maxH","opacity","overflow","zIndex","borderStyle","backgroundColor","getThemeColor","colors","bg","createFlexStyles","createPositionStyle","createShadowStyles","createBorderWidthStyles","createSpacingStyles","spacing","createBorderColorStyles","createBorderRadiusStyles","borderRadius","image","style","StyleSheet","create"],"sources":["animated.style.tsx"],"sourcesContent":["import { StyleSheet } from 'react-native';\nimport { ThemeType } from '../../theme';\n\nimport {\n  createFlexStyles,\n  createShadowStyles,\n  createPositionStyle,\n  createSpacingStyles,\n  createBorderWidthStyles,\n  createBorderColorStyles,\n  createBorderRadiusStyles,\n  getThemeColor,\n} from '../../theme/theme.service';\n\n/**\n * computed style\n *\n * @param theme\n * @param props\n */\nexport const getStyle = (theme: ThemeType, props: any) => {\n  const computedStyle: any = {};\n\n  computedStyle.div = {\n    flexDirection: props.row ? 'row' : props.flexDir,\n    flexWrap: props.flexWrap,\n    alignItems: props.alignItems,\n    justifyContent: props.justifyContent,\n    height: props.h,\n    width: props.w,\n    minWidth: props.minW,\n    minHeight: props.minH,\n    alignSelf: props.alignSelf,\n    maxWidth: props.maxW,\n    maxHeight: props.maxH,\n    opacity: props.opacity,\n    overflow: props.overflow,\n    zIndex: props.zIndex,\n    borderStyle: props.borderStyle,\n    backgroundColor: getThemeColor(theme.colors, props.bg),\n    ...createFlexStyles(props),\n    ...createPositionStyle(props),\n    ...createShadowStyles(props, theme),\n    ...createBorderWidthStyles(props),\n    ...createSpacingStyles(props, theme.spacing),\n    ...createBorderColorStyles(props, theme.colors),\n    ...createBorderRadiusStyles(props, theme.borderRadius),\n  };\n\n  computedStyle.image = {\n    ...createBorderRadiusStyles(props, theme.borderRadius),\n  };\n\n  // merging style props to computed style\n  if (props.style) {\n    computedStyle.div = {\n      ...computedStyle.div,\n      ...props.style,\n    };\n  }\n\n  return StyleSheet.create(computedStyle);\n};\n"],"mappings":"oPAAA,yCAGA,gDAiBO,GAAMA,SAAQ,CAAG,QAAXA,SAAW,CAACC,KAAD,CAAmBC,KAAnB,CAAkC,CACxD,GAAMC,cAAkB,CAAG,EAA3B,CAEAA,aAAa,CAACC,GAAd,wBACEC,aAAa,CAAEH,KAAK,CAACI,GAAN,CAAY,KAAZ,CAAoBJ,KAAK,CAACK,OAD3C,CAEEC,QAAQ,CAAEN,KAAK,CAACM,QAFlB,CAGEC,UAAU,CAAEP,KAAK,CAACO,UAHpB,CAIEC,cAAc,CAAER,KAAK,CAACQ,cAJxB,CAKEC,MAAM,CAAET,KAAK,CAACU,CALhB,CAMEC,KAAK,CAAEX,KAAK,CAACY,CANf,CAOEC,QAAQ,CAAEb,KAAK,CAACc,IAPlB,CAQEC,SAAS,CAAEf,KAAK,CAACgB,IARnB,CASEC,SAAS,CAAEjB,KAAK,CAACiB,SATnB,CAUEC,QAAQ,CAAElB,KAAK,CAACmB,IAVlB,CAWEC,SAAS,CAAEpB,KAAK,CAACqB,IAXnB,CAYEC,OAAO,CAAEtB,KAAK,CAACsB,OAZjB,CAaEC,QAAQ,CAAEvB,KAAK,CAACuB,QAblB,CAcEC,MAAM,CAAExB,KAAK,CAACwB,MAdhB,CAeEC,WAAW,CAAEzB,KAAK,CAACyB,WAfrB,CAgBEC,eAAe,CAAE,GAAAC,oBAAA,EAAc5B,KAAK,CAAC6B,MAApB,CAA4B5B,KAAK,CAAC6B,EAAlC,CAhBnB,EAiBK,GAAAC,uBAAA,EAAiB9B,KAAjB,CAjBL,CAkBK,GAAA+B,0BAAA,EAAoB/B,KAApB,CAlBL,CAmBK,GAAAgC,yBAAA,EAAmBhC,KAAnB,CAA0BD,KAA1B,CAnBL,CAoBK,GAAAkC,8BAAA,EAAwBjC,KAAxB,CApBL,CAqBK,GAAAkC,0BAAA,EAAoBlC,KAApB,CAA2BD,KAAK,CAACoC,OAAjC,CArBL,CAsBK,GAAAC,8BAAA,EAAwBpC,KAAxB,CAA+BD,KAAK,CAAC6B,MAArC,CAtBL,CAuBK,GAAAS,+BAAA,EAAyBrC,KAAzB,CAAgCD,KAAK,CAACuC,YAAtC,CAvBL,EA0BArC,aAAa,CAACsC,KAAd,0BACK,GAAAF,+BAAA,EAAyBrC,KAAzB,CAAgCD,KAAK,CAACuC,YAAtC,CADL,EAKA,GAAItC,KAAK,CAACwC,KAAV,CAAiB,CACfvC,aAAa,CAACC,GAAd,0BACKD,aAAa,CAACC,GADnB,CAEKF,KAAK,CAACwC,KAFX,EAID,CAED,MAAOC,wBAAA,CAAWC,MAAX,CAAkBzC,aAAlB,CAAP,CACD,CA1CM,C"}