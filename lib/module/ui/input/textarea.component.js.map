{"version":3,"names":["Textarea","incomingProps","props","useDefaultProps","minH","p","borderColor","borderWidth","multiline","textAlignVertical","h","w","m","minW","suffix","prefix","style","onBlur","onFocus","children","focusBorderColor","rest","useTheme","theme","useState","isFocussed","setIsFocussed","computedStyle","getStyle","onFocusInput","e","onBlurInput","container","input"],"sources":["textarea.component.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useState } from 'react';\nimport {\n  View as RNView,\n  NativeSyntheticEvent,\n  TextInputFocusEventData,\n  TextInput as RNTextInput,\n} from 'react-native';\n\nimport { getStyle } from './input.style';\nimport { TextareaProps } from './textarea.type';\nimport { useTheme } from '../../theme';\nimport { useDefaultProps } from '../../utilities/useDefaultProps';\n\nconst Textarea: React.FunctionComponent<TextareaProps> = (incomingProps) => {\n  const props = useDefaultProps('Textarea', incomingProps, {\n    minH: 100,\n    p: 'lg',\n    borderColor: 'gray500',\n    borderWidth: 1,\n    multiline: true,\n    textAlignVertical: 'top',\n  });\n\n  const {\n    h,\n    w,\n    m,\n    minH,\n    minW,\n    suffix,\n    prefix,\n    style,\n    onBlur,\n    onFocus,\n    children,\n    focusBorderColor,\n    ...rest\n  } = props;\n  const { theme } = useTheme();\n  const [isFocussed, setIsFocussed] = useState(false);\n  const computedStyle = getStyle(theme, props, { isFocussed });\n\n  /**\n   * on focus input\n   */\n  const onFocusInput = (e: NativeSyntheticEvent<TextInputFocusEventData>) => {\n    setIsFocussed(true);\n\n    if (onFocus) {\n      onFocus(e);\n    }\n  };\n\n  /**\n   * on blur input\n   * @param e\n   */\n  const onBlurInput = (e: NativeSyntheticEvent<TextInputFocusEventData>) => {\n    setIsFocussed(false);\n\n    if (onBlur) {\n      onBlur(e);\n    }\n  };\n\n  return (\n    <RNView style={computedStyle.container}>\n      <RNTextInput\n        onFocus={(e) => onFocusInput(e)}\n        onBlur={(e) => onBlurInput(e)}\n        style={computedStyle.input}\n        {...rest}\n      />\n    </RNView>\n  );\n};\n\n// Textarea.defaultProps = {\n//   minH: 100,\n//   p: 'lg',\n//   borderColor: 'gray500',\n//   borderWidth: 1,\n// };\n\nexport { Textarea };\n"],"mappings":"gcAAA,oDAEA,yCAOA,oCAEA,kCACA,gE,muCAEA,GAAMA,SAAgD,CAAG,QAAnDA,SAAmD,CAACC,aAAD,CAAmB,CAC1E,GAAMC,MAAK,CAAG,GAAAC,gCAAA,EAAgB,UAAhB,CAA4BF,aAA5B,CAA2C,CACvDG,IAAI,CAAE,GADiD,CAEvDC,CAAC,CAAE,IAFoD,CAGvDC,WAAW,CAAE,SAH0C,CAIvDC,WAAW,CAAE,CAJ0C,CAKvDC,SAAS,CAAE,IAL4C,CAMvDC,iBAAiB,CAAE,KANoC,CAA3C,CAAd,CASA,GACEC,EADF,CAcIR,KAdJ,CACEQ,CADF,CAEEC,CAFF,CAcIT,KAdJ,CAEES,CAFF,CAGEC,CAHF,CAcIV,KAdJ,CAGEU,CAHF,CAIER,IAJF,CAcIF,KAdJ,CAIEE,IAJF,CAKES,IALF,CAcIX,KAdJ,CAKEW,IALF,CAMEC,MANF,CAcIZ,KAdJ,CAMEY,MANF,CAOEC,MAPF,CAcIb,KAdJ,CAOEa,MAPF,CAQEC,KARF,CAcId,KAdJ,CAQEc,KARF,CASEC,MATF,CAcIf,KAdJ,CASEe,MATF,CAUEC,OAVF,CAcIhB,KAdJ,CAUEgB,OAVF,CAWEC,QAXF,CAcIjB,KAdJ,CAWEiB,QAXF,CAYEC,gBAZF,CAcIlB,KAdJ,CAYEkB,gBAZF,CAaKC,IAbL,uCAcInB,KAdJ,YAeA,cAAkB,GAAAoB,eAAA,GAAlB,CAAQC,KAAR,WAAQA,KAAR,CACA,cAAoC,GAAAC,cAAA,EAAS,KAAT,CAApC,qDAAOC,UAAP,eAAmBC,aAAnB,eACA,GAAMC,cAAa,CAAG,GAAAC,eAAA,EAASL,KAAT,CAAgBrB,KAAhB,CAAuB,CAAEuB,UAAU,CAAVA,UAAF,CAAvB,CAAtB,CAKA,GAAMI,aAAY,CAAG,QAAfA,aAAe,CAACC,CAAD,CAAsD,CACzEJ,aAAa,CAAC,IAAD,CAAb,CAEA,GAAIR,OAAJ,CAAa,CACXA,OAAO,CAACY,CAAD,CAAP,CACD,CACF,CAND,CAYA,GAAMC,YAAW,CAAG,QAAdA,YAAc,CAACD,CAAD,CAAsD,CACxEJ,aAAa,CAAC,KAAD,CAAb,CAEA,GAAIT,MAAJ,CAAY,CACVA,MAAM,CAACa,CAAD,CAAN,CACD,CACF,CAND,CAQA,MACE,qBAAC,iBAAD,EAAQ,KAAK,CAAEH,aAAa,CAACK,SAA7B,6EACE,oBAAC,sBAAD,wBACE,OAAO,CAAE,iBAACF,CAAD,QAAOD,aAAY,CAACC,CAAD,CAAnB,EADX,CAEE,MAAM,CAAE,gBAACA,CAAD,QAAOC,YAAW,CAACD,CAAD,CAAlB,EAFV,CAGE,KAAK,CAAEH,aAAa,CAACM,KAHvB,EAIMZ,IAJN,+EADF,CADF,CAUD,CA9DD,C"}