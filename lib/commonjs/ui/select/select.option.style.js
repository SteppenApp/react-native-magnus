"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.getStyle=void 0;var _extends2=_interopRequireDefault(require("@babel/runtime/helpers/extends"));var _reactNative=require("react-native");var _theme=require("../../theme/theme.service");var getStyle=function getStyle(theme,props){var computedStyle={};computedStyle.button=(0,_extends2.default)({justifyContent:'center',alignItems:'center',flexDirection:'row',alignSelf:'flex-start',position:props.position,backgroundColor:(0,_theme.getThemeColor)(theme.colors,props.bg)},(0,_theme.createSpacingStyles)(props,theme.spacing));computedStyle.text={color:(0,_theme.getThemeColor)(theme.colors,props.color),textAlign:'right',fontSize:(0,_theme.getThemeProperty)(theme.fontSize,props.fontSize)};computedStyle.container={flexDirection:'row',alignItems:'center',justifyContent:'center',position:'relative'};if(props.shadow){computedStyle.button=(0,_extends2.default)({},computedStyle.button,theme.shadow&&theme.shadow[props.shadow],{shadowColor:(0,_theme.getThemeColor)(theme.colors,props.shadowColor)});}if(props.block){computedStyle.container=(0,_extends2.default)({},computedStyle.container,{width:'100%'});}if(props.w){computedStyle.button=(0,_extends2.default)({},computedStyle.button,{width:props.w});}if(props.h){computedStyle.button=(0,_extends2.default)({},computedStyle.button,{height:props.h});}if(props.top){computedStyle.button=(0,_extends2.default)({},computedStyle.button,{top:props.top});}if(props.right){computedStyle.button=(0,_extends2.default)({},computedStyle.button,{right:props.right});}if(props.bottom){computedStyle.button=(0,_extends2.default)({},computedStyle.button,{bottom:props.bottom});}if(props.left){computedStyle.button=(0,_extends2.default)({},computedStyle.button,{left:props.left});}if(props.borderColor){computedStyle.button=(0,_extends2.default)({},computedStyle.button,{borderColor:(0,_theme.getThemeColor)(theme.colors,props.borderColor)});}if(props.borderWidth){computedStyle.button=(0,_extends2.default)({},computedStyle.button,{borderWidth:props.borderWidth});}if(props.rounded){computedStyle.button=(0,_extends2.default)({},computedStyle.button,(0,_theme.createBorderRadiusStyles)(props.rounded,theme.borderRadius));}if(props.disabled){computedStyle.button=(0,_extends2.default)({},computedStyle.button,{opacity:0.5});}if(props.style){computedStyle.container=(0,_extends2.default)({},computedStyle.container,props.style);}return _reactNative.StyleSheet.create(computedStyle);};exports.getStyle=getStyle;
//# sourceMappingURL=select.option.style.js.map